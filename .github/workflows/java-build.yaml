name: Java CI with Gradle and RabbitMQ

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        # 리포지토리 코드 체크아웃

      - name: Set up Docker and Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install docker-compose
        # Docker와 Docker Compose 설치

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
        # Java JDK 설정

      - name: Set up environment variables
        run: |
          echo "RABBIT_HOST=${{ secrets.RABBIT_HOST }}" >> $GITHUB_ENV
          echo "RABBIT_USER=${{ secrets.RABBIT_USER }}" >> $GITHUB_ENV
          echo "RABBIT_PASS=${{ secrets.RABBIT_PASS }}" >> $GITHUB_ENV
          echo "FIREBASE_ADMIN_KEY=${{ secrets.FIREBASE_ADMIN_KEY }}" >> $GITHUB_ENV
          echo "FIREBASE_BUCKET_NAME=${{ secrets.FIREBASE_BUCKET_NAME }}" >> $GITHUB_ENV
        # 환경 변수 설정

      - name: Start RabbitMQ service
        run: docker-compose up -d rabbitmq
        # RabbitMQ 서비스 시작

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
        # Gradle 래퍼 스크립트 실행 권한 부여

      - name: Build with Gradle
        run: ./gradlew build
        # Gradle 빌드 실행

      - name: Shutdown RabbitMQ service
        run: docker-compose down
        # RabbitMQ 서비스 종료

      - name: Upload test report
        uses: actions/upload-artifact@v3
        if: failure() # 테스트 실패 시에만 보고서 업로드
        with:
          name: test-reports
          path: |
            **/build/reports/tests/test/
            **/build/test-results/test/
        # 테스트 보고서 업로드
